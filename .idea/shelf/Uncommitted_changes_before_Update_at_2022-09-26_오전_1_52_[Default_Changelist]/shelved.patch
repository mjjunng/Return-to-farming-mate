Index: app/src/main/java/com/android/become_a_farmer/FragmentHomeMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.android.become_a_farmer;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.DividerItemDecoration;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.android.become_a_farmer.service.AuthenticationService;\r\nimport com.android.become_a_farmer.service.RecommendBasedUserService;\r\nimport com.android.become_a_farmer.service.RecommendService;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class FragmentHomeMain extends Fragment {\r\n    private android.view.View view;\r\n    private static FirebaseFirestore db;\r\n    private RecyclerView recyclerView;\r\n    private RecyclerViewAdapter rAdapter;\r\n    private TextView txt_name;\r\n    private UserDTO userDTO;\r\n    private String email;\r\n    private TextView txt_preference;\r\n    public static Context context_main;\r\n    private RecommendService recommedService;\r\n    private RecommendBasedUserService recommendBasedUserService;\r\n    private AuthenticationService authenticationService;\r\n\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        view = inflater.inflate(R.layout.activity_home_main, container, false);\r\n        context_main = getContext();\r\n        db = FirebaseFirestore.getInstance();\r\n\r\n        recyclerView = (RecyclerView) view.findViewById(R.id.rv_lst);\r\n        rAdapter = new RecyclerViewAdapter(getContext());\r\n        recyclerView.setAdapter(rAdapter);\r\n        recyclerView.setLayoutManager(new GridLayoutManager(getActivity(), 2));\r\n\r\n        txt_name = (TextView) view.findViewById(R.id.txt_name);\r\n        txt_preference = (TextView) view.findViewById(R.id.txt_preference);\r\n\r\n        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n\r\n        recommedService = new RecommendService(db, rAdapter);\r\n        authenticationService = new AuthenticationService();\r\n        recommendBasedUserService = RecommendBasedUserService.getInstance();\r\n        recommendBasedUserService.setDb(db);\r\n\r\n//\r\n//        if (decoration != null) {\r\n//            recyclerView.removeItemDecoration(decoration);\r\n//        }\r\n\r\n        // 최초 실행 여부를 판단\r\n        // isFirst : true => 최초 실행\r\n        // isFirst : false => 최초 실행 아님\r\n        email = authenticationService.getUserEmail();\r\n        SharedPreferences pref = this.getActivity().getSharedPreferences(\"pref\", Activity.MODE_PRIVATE);\r\n        boolean first = pref.getBoolean(\"isFirst\", true);\r\n\r\n        // 로그인 -> 취향 분석 ok 클릭 -> 취향 분석 화면으로 넘어감\r\n//        Log.d(\"checkFirstRun\", String.valueOf(first));\r\n\r\n\r\n        if ((first) && (email != null)){ // 최초 실행 && 로그인 한 경우\r\n            // 취향 분석 화면으로 넘어가기 위해 사용자에게 다이얼로그 띄움\r\n            // 확인 -> 취향 분석 화면으로 넘어감\r\n            // 다음에 -> 그대로\r\n            AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n            builder.setMessage(\"취향 분석을 위한 화면으로 이동하시겠습니까?\");\r\n\r\n            builder.setPositiveButton(\"확인\", new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    SharedPreferences.Editor editor = pref.edit();\r\n                    editor.putBoolean(\"isFirst\", false);\r\n                    editor.commit();\r\n\r\n                    Intent intent = new Intent(getActivity().getApplicationContext(), ChoiceAge.class);\r\n                    startActivity(intent);\r\n                }\r\n            });\r\n\r\n            builder.setNegativeButton(\"다음에 할게요\", new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialog, int which) {\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n        // 사용자의 추천 지역 화면에 뿌림\r\n        if (email != null){\r\n            txt_preference.setVisibility(View.VISIBLE);\r\n            setUserName(email, txt_name);   // 이름 화면에 표시\r\n            // 추천 지역 화면에 뿌림\r\n            recommedService.getRecommendRegion(email);\r\n\r\n\r\n            DocumentReference docRef = db.collection(\"ratings\").document(email);\r\n            docRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                    if (task.isSuccessful()) {\r\n                        DocumentSnapshot document = task.getResult();\r\n                        if (document.exists()) {    // -> 만약 사용자가 리뷰를 등록하지 않았다면, 사용자 기반 추천 시스템 실행할 수 없음\r\n\r\n                            recommendBasedUserService.getRatingFromDB();\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        // 취향 분석 화면으로 넘어가기\r\n        txt_preference.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (txt_preference.getVisibility() == View.VISIBLE){\r\n                    Intent intent = new Intent(getActivity(), ChoiceAge.class);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n\r\n    // 사용자 이름 ui에 표시\r\n    private void setUserName(String email, TextView txt_name){\r\n        DocumentReference docRef = db.collection(\"users\").document(email);\r\n        docRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                if (task.isSuccessful()) {\r\n                    DocumentSnapshot document = task.getResult();\r\n                    String name;\r\n                    try{\r\n                        name = document.getData().get(\"name\").toString();\r\n                        txt_name.setText(name);\r\n\r\n                    } catch (Exception e) {\r\n\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/android/become_a_farmer/FragmentHomeMain.java b/app/src/main/java/com/android/become_a_farmer/FragmentHomeMain.java
--- a/app/src/main/java/com/android/become_a_farmer/FragmentHomeMain.java	(revision 1529d9bbe3ae19826b108cee2f13605a4613b9a3)
+++ b/app/src/main/java/com/android/become_a_farmer/FragmentHomeMain.java	(date 1663675743774)
@@ -134,7 +134,6 @@
                     if (task.isSuccessful()) {
                         DocumentSnapshot document = task.getResult();
                         if (document.exists()) {    // -> 만약 사용자가 리뷰를 등록하지 않았다면, 사용자 기반 추천 시스템 실행할 수 없음
-
                             recommendBasedUserService.getRatingFromDB();
                         }
                     }
